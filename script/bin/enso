#!/system/bin/sh
#
# OnTheOne ensō
# Coded by BlackMesa123
#
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

BUSYBOX="/system/xbin/busybox";
LOGFILE="/dev/null";
DEBUG=false;
IsSupported=false;
IsDream=false;
IsDream2=false;
IsGreat=false;



function enso_abort() {
    echo "" >> "$LOGFILE";
    if $DEBUG; then
        exit 1;
    else
        reboot;
    fi;
}

function enso_checksupport() {
    if ! $IsSupported; then
        echo "E: enso_checksupport: Device not recognized! Aborting..." >> "$LOGFILE";
        enso_abort;
    fi;
    if $IsDream; then
        echo "I: enso_checksupport: Device recognized: Galaxy S8" >> "$LOGFILE";
    elif $IsDream2; then
        echo "I: enso_checksupport: Device recognized: Galaxy S8+" >> "$LOGFILE";
    elif $IsGreat; then
        echo "I: enso_checksupport: Device recognized: Galaxy Note8" >> "$LOGFILE";
    fi;
}

function enso_extractpkg() {
    if [ ! -f "$1" ]; then
        echo "E: enso_extractpkg: $1 not found! Aborting..." >> "$LOGFILE";
        enso_abort;
    else
        $BUSYBOX sed -i 's/ONPKG/BZh/g' "$1";
        $BUSYBOX tar -xjf "$1" -C "$2" >> "$LOGFILE";
        $BUSYBOX sed -i 's/BZh/ONPKG/g' "$1";
    fi;
}

function enso_fix_secontext() {
    if [ ! -f "$2" ]; then
        echo "E: enso_fix_secontext: $3 not found! Aborting..." >> "$LOGFILE";
        enso_abort;
    else
        $BUSYBOX chmod -t "$1" "$3" >> "$LOGFILE";   
        $BUSYBOX chcon -t "$2" "$3" >> "$LOGFILE";
    fi;
}

function enso_initfields() {
    if [ "$(getprop ro.on.enso.debug)" = "true" ]; then
        DEBUG=true;
        LOGFILE="/system/on_enso.log";
    fi;
    if getprop ro.boot.bootloader | grep -iq -E -e '^G950'; then
        IsSupported=true;
        IsDream=true;
    fi;
    if getprop ro.boot.bootloader | grep -iq -E -e '^G955'; then
        IsSupported=true;
        IsDream=true;
        IsDream2=true;
    fi;
    if getprop ro.boot.bootloader | grep -iq -E -e '^N950'; then
        IsSupported=true;
        IsGreat=true;
    fi;
}

function enso_symlink() {
    if [ ! -f "$1" ]; then
        echo "E: enso_symlink: $1 not found, couldn't link to $2" >> "$LOGFILE";
        enso_abort;
    else
        if [ -f "$2" ]; then
            rm -f "$2";
        fi;
        ln -s "$1" "$2" >> "$LOGFILE";
    fi;
}



mount -o remount,rw /system;

enso_initfields;

echo "" >> "$LOGFILE";
echo "-------- OnTheOne ensō boot script --------" >> "$LOGFILE";
echo "---- Init system at" $(date '+%D %T') "----" >> "$LOGFILE";
echo "" >> "$LOGFILE";

enso_checksupport;

echo "I: ensō: Applying device fixes" >> "$LOGFILE";
if $IsDream; then
    enso_extractpkg "/system/enso/dream.onpkg" "/system";
elif $IsGreat; then
    enso_extractpkg "/system/enso/great.onpkg" "/system";
fi;

enso_fix_secontext "644" "system_file" "/system/cameradata/camera-feature.xml";

echo "I: ensō: All set! Script self-destroying..." >> "$LOGFILE";
rm -f /system/bin/enso >> "$LOGFILE";
rm -f /system/etc/init/enso.rc >> "$LOGFILE";
rm -rf /system/enso >> "$LOGFILE";
rm -f $BUSYBOX >> "$LOGFILE";
mount -o remount,ro /system;
reboot;

